const { getDatabase } = require("../../../../../utils/database");
require("dotenv").config();
const jwt = require("jsonwebtoken");

exports.webGenerateToken = (req, res) => {
  const user = req.body;
  const token = jwt.sign(user, process.env.ACCESS_TOKEN_SECRET, {
    expiresIn: "1h",
  });

  // Set the token as an HTTP-only cookie
  res.cookie("token", token, {
    httpOnly: true,
    secure: true, // Set to true if your server is running over HTTPS
    sameSite: "strict", // Adjust according to your security requirements
    maxAge: 2 * 60 * 60 * 1000, // Max age of the cookie in milliseconds (2 hours)
  });

  res.send({ token, email: user.email });
};
exports.checkWebUser = async (req, res) => {
  const email = req.params.email;
  const db = getDatabase();
  if (req.decoded.email !== email) {
    res.send({ webUser: false });
  }

  const query = { email: email };
  const jobQuery = { status: true };
  const data = await db.collection("users").findOne(query);
  const hQuery = { uid: data?._id.toString() };
  const user = {
    status: data?.status,
    name: data?.name,
    email: data?.email,
    balance: data?.balance,
    notice: data?.notice,
    phone: data?.phone,
    refBy: data?.refBy,
    referCode: data?.referCode,
    comStatus: data?.comStatus,
    id: data?._id,
    type: data?.type,
    govId: data?.govId,
    resellerStatus: data?.resellerStatus,
    url: data?.url,
  };
  const history = await db
    .collection("history")
    .find(hQuery)
    .sort({ date: -1 })
    .limit(10)
    .toArray();
  const direct = await db
    .collection("directlinks")
    .find(jobQuery)
    .sort({ published: -1 })
    .limit(10)
    .toArray();
  const global = await db.collection("utils").find().toArray();
  const jdata = await db
    .collection("jobs")
    .find(jobQuery)
    .sort({ published: -1 })
    .limit(10)
    .toArray();
  const jobs = jdata.filter((job) => {
    const vacancy = job.vacancy;
    const attempt = job.attempt;
    // Exclude jobs where vacancy and attempt are the same
    if (vacancy === attempt) {
      return false;
    }
    // Exclude jobs where attempt is greater than or equal to vacancy
    if (attempt >= vacancy) {
      return false;
    }
    // Exclude jobs where attempt is negative
    if (attempt < 0) {
      return false;
    }
    // Include all other jobs
    return true;
  });
  const result = {
    webUser: data?.status === true,
    user,
    global: global[0],
    jobs,
    direct,
    history,
  };
  res.send(result);
};

exports.webSeed = async (req, res) => {
  const db = getDatabase();
  const admin = await db.collection("admins").insertOne({
    name: "Super Admin",
    email: "super@airdrop2pay.com",
    role: "admin",
    status: true,
  });

  const directSubmit = await db.collection("directSubmit").insertOne({
    visitTime: "200",
  });

  const directlinks = await db.collection("directlinks").insertOne({
    count: 783,
  });

  const history = await db.collection("history").insertOne({
    count: 783,
  });

  const jobSubmit = await db.collection("jobSubmit").insertOne({
    amount: 783,
  });
  const visitSubmit = await db.collection("visitSubmit").insertOne({
    amount: 783,
  });
  const visitearns = await db.collection("visitearns").insertOne({
    status: false,
  });
  const withdraws = await db.collection("withdraws").insertOne({
    withdrawNumber: "0125215525",
    mathod: "Bkash Personal",
    uid: "test@gmail.com",
    outAmount: { $numberDouble: "0.5" },
    status: "Pending",
    date: "04-04-2024 9:34:02 AM",
  });
  const users = await db.collection("users").insertOne({
    name: "test User",
    email: "test@gmail.com",
    phone: "0141660000",
    password: "$2a$10$Q3mwk1WHr6XBJCySDG2x6ej4Fl8BXSwYrXLwgziR51PeoA/wiqdau",
    referCode: "JB",
    status: true,
    balance: "0.0000",
    refBy: [],
    notice: "‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ",
    comStatus: true,
    joinDate: "04-04-2024 6:59:27 AM",
    uit: "AZ4",
  });
  const jobs = await db.collection("jobs").insertOne({
    title: "‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§/Add ‡¶ú‡¶¨!",
    vacancy: { $numberInt: "100" },
    attempt: { $numberInt: "100" },
    img: "https://i.ibb.co/gMmQBpV/images-2024-04-03-T051328-573.jpg",
    jobPrice: { $numberDouble: "0.0046" },
    description: [
      { text: "‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶´ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ú‡ßü‡ßá‡¶® ‡¶π‡ßü‡ßá ‡¶®‡¶ø‡¶®" },
      { text: "‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶Ç‡¶ï:  https://t.me/" },
    ],
    status: true,
    published: "2024",
  });
  const global = await db.collection("global").insertOne({
    topNews:
      "‚ö†Ô∏è‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶è ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶è‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶Ø‡¶æ‡¶®‡¶§‡ßá ‡¶è‡¶ñ‡ßã‡¶®‡ßã Add ‡¶ï‡¶∞‡ßá‡¶®‡¶®‡¶ø ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶≤‡ßá website ‡¶¶‡¶æ‡ßü‡ßÄ ‡¶®‡ßü‡•§\n\n‚û°Ô∏è ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶ú‡¶¨ ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶¶‡¶ø‡¶§‡ßá ‡¶ö‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡¶® ‡¶§‡¶æ‡¶∞‡¶æ 01303850197 ‡¶è‡¶á ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ‡¶π‡ßã‡ßü‡¶æ‡¶ü‡¶∏‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ \n\n‡¶Æ‡¶ø‡¶®‡¶ø‡¶Æ‡¶æ‡¶Æ ‡¶°‡¶ø‡¶™‡ßã‡¶ú‡¶ø‡¶ü ‡ß´‡ß¶‡ß¶/- ‡¶ü‡¶æ‡¶ï‡¶æ‡•§\n‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶π‡ßã‡ßü‡¶æ‡¶ü‡¶∏‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®‡•§\n\nüí• ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡ßü‡¶æ‡¶Æ ‡¶ï‡ßã‡ßü‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü‡ßÅ‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶® ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶è‡¶∏‡ßá‡¶õ‡ßá, ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶®‡¶ø‡¶§‡ßá ‡¶π‡ßã‡ßü‡¶æ‡¶ü‡¶∏‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ",
    telegramChannel: "https://t.me/mtfetech",
    telegramGroup: "https://t.me/mtfetech",
    dailyNews:
      "‚ú®‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® $0.015 ‡¶°‡¶≤‡¶æ‡¶∞ (‡ßß.‡ß¨‡ß™ ‡¶ü‡¶æ‡¶ï‡¶æ) ‡¶´‡ßç‡¶∞‡¶ø ‡¶∞‡¶ø‡¶∏‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®‡•§üìç‡¶°‡ßá‡¶á‡¶≤‡¶ø ‡¶ö‡ßá‡¶ï‡¶ø‡¶Ç ‡¶Ö‡¶™‡¶∂‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶¨‡ßá‡¶∂ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßã‡¶®‡¶æ‡¶∏ ‡¶ï‡¶æ‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶®‡•§",
    refNews:
      "‚ú®‡¶∞‡ßá‡¶´‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡ßá‡¶á ‡¶Ü‡¶™‡¶®‡¶ø $0.018 ‡¶°‡¶≤‡¶æ‡¶∞ (‡ß® ‡¶ü‡¶æ‡¶ï‡¶æ) ‡¶™‡ßá‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡¶®‡•§ ‚ö†Ô∏è‡¶è‡¶ï‡¶á ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ñ‡ßÅ‡¶≤‡¶≤‡ßá‡¶á ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶Ö‡¶ü‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡ßß‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡•§ ‡¶∏‡ßÅ‡¶§‡¶∞‡¶æ‡¶Ç ‡¶´‡ßá‡¶ï ‡¶∞‡ßá‡¶´‡¶æ‡¶∞ ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶è‡¶ï‡¶á ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶ß‡¶ø‡¶ï ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ï‡¶•‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶ø‡¶∞‡¶§ ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®!üö©",
    dailyCommission: { $numberDouble: "0.015" },
    withdrawType: [
      {
        name: "Bkash Personal",
        logo: "https://seeklogo.com/images/B/bkash-logo-FBB258B90F-seeklogo.com.png",
        details:
          "The money will be sent directly to the Baksh that is associated with the same email as your bKash account.",
      },
      {
        name: "Nagad Personal",
        logo: "https://seeklogo.com/images/N/nagad-logo-AA1B37DF1B-seeklogo.com.png",
        details:
          "Use your Nagad Gift Card* towards Books, Electronics, Music, and more.",
      },
      {
        name: "Binance",
        logo: "https://logolook.net/wp-content/uploads/2022/06/Binance-Logo.png",
        details:
          "The money will be sent directly to the Binance that is associated with the same email as your Binance account.",
      },
      {
        name: "Payeer",
        logo: "https://iconape.com/wp-content/png_logo_vector/payeer-logo.png",
        details:
          "The money will be sent directly to the Payeer that is associated with the same email as your Payeer account.",
      },
    ],
    withdrawRules: {
      maxAmount: { $numberInt: "100" },
      minAmount: { $numberDouble: "0.5" },
      outAmount: { $numberDouble: "0.046" },
      minRef: { $numberInt: "0" },
      withTime: "10AM 5PM",
    },
    referBonus: { $numberInt: "0" },
  });

  res.json({
    admin,
    global,
    jobs,
    users,
    history,
    withdraws,
    visitearns,
    visitSubmit,
    jobSubmit,
    directlinks,
    directSubmit,
  });
};
